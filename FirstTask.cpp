#include <iostream>
#include <iomanip>
#include <vector>
#include "algorithm"
using namespace std;
 
 /*Евлампий готовится к экзамену. У него есть список из n вопросов, которые ему нужно выучить. Евлампий уже прочитал по одному разу все вопросы, поэтому для каждого вопроса #j он знает, сколько времени tj ему потребуется на тщательное изучение этого вопроса.

Впрочем, Евлампий реалист, и понимает, что у него осталось не так много времени на подготовку. Поэтому он полагает, что некоторые вопросы придется изучать не очень тщательно. Если Евлампий будет изучать вопрос #k не очень тщательно, он потратит на это tk / 2 единиц времени.

До экзамена осталось m единиц времени, которые Евлампий планирует полностью потратить на подготовку вопросов. При этом он хочет выполнить два условия: во-первых, подготовить (тщательно или менее тщательно) все вопросы из списка; во-вторых, максимально возможное количество вопросов подготовить тщательно. Ваша задача — определить, каково максимально возможное количество вопросов, которые Евлампий сможет подготовить тщательно (при выполнении первого условия).*/
int main()
{
	int n, m; //кол-во вопросов и кол-во единиц времени на подготовку
	double summ = 0;
	int count = 0;
	std::cin >> n >> m;
	std::vector<double> TimesForAnswers(n);
	for (int i = 0; i < n; i++)
		std::cin >> TimesForAnswers[i];
	 std::sort(begin(TimesForAnswers), end(TimesForAnswers));
	for (int i = 0; i < n; i++)
	{
		summ += TimesForAnswers[i];
	}
	if ((summ / 2) > m)
		std::cout << -1;
	else if (m > summ)
		std::cout << n;
	else if ((summ / 2) == m)
		std::cout << 0;
	else
	{
		summ /= 2;
		for (int i = 0; summ < m; i++)
		{
			summ += (TimesForAnswers[i] / 2);
			if(summ<m)
				count++;
 
		}
		std::cout << count;
	}
	return 0;
}